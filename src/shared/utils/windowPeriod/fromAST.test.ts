import {
  getWindowPeriodVariableAssignment,
  getWindowPeriodFromAST,
} from './fromAST'
import {getRangeVariable} from 'src/variables/utils/getTimeRangeVars'
import {Package} from 'src/types/ast'
import {TimeRange} from 'src/types'
import {asAssignment} from 'src/variables/selectors'
import {buildVarsOption} from 'src/variables/utils/buildVarsOption'
import {TIME_RANGE_START, TIME_RANGE_STOP} from 'src/variables/constants'
import {FALLBACK_WINDOW_PERIOD} from 'src/shared/constants/timeRanges'

describe('Getting a windowPeriod from a flux query AST', () => {
  const outerWindowPeriod = 60000
  const range: TimeRange = {
    seconds: 10800,
    lower: 'now() - 3h',
    upper: null,
    label: 'Past 3h',
    duration: '3h',
    type: 'selectable-duration',
    windowPeriod: 60000,
  }
  const outerVariablesFromUI = [
    getRangeVariable(TIME_RANGE_START, range),
    getRangeVariable(TIME_RANGE_STOP, range),
  ]

  const runTest = (ast, shouldInject, expected) => {
    const varAssignmentNodes = outerVariablesFromUI.map(v => asAssignment(v))
    const outerScopeAst: Package = {
      package: '',
      type: 'Package',
      files: [buildVarsOption(varAssignmentNodes)],
    }
    it('correctly determines if should inject in extern', () => {
      const {toInject} = getWindowPeriodVariableAssignment(ast, outerScopeAst)
      expect(toInject).toEqual(shouldInject)
    })
    it('finds the correct value', () => {
      const windowPeriodMillisec = getWindowPeriodFromAST(ast, outerScopeAst)
      expect(windowPeriodMillisec).toEqual(expected)
    })
  }

  describe('Basic reading of inputs:', () => {
    describe('empty query', () => {
      const ast = JSON.parse(
        '{"type":"File","metadata":"parser-type=rust","package":null,"imports":[],"body":[]}'
      )

      runTest(ast, false, outerWindowPeriod)
    })

    describe('query with timeRange, and no windowPeriod', () => {
      /*
          import "influxdata/influxdb/sample"
          sample.data(set: "airSensor")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> yield(name: "${v.windowPeriod}")
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":3,"column":61},"source":"import \\"influxdata/influxdb/sample\\"\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"ExpressionStatement","location":{"start":{"line":2,"column":1},"end":{"line":3,"column":61},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)"},"expression":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":3,"column":61},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)"},"argument":{"type":"CallExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":2,"column":8},"end":{"line":2,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":2,"column":18},"end":{"line":2,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":3,"column":8},"end":{"line":3,"column":61},"source":"range(start: v.timeRangeStart, stop: v.timeRangeStop)"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":8},"end":{"line":3,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":60},"source":"start: v.timeRangeStart, stop: v.timeRangeStop"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":37},"source":"start: v.timeRangeStart"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":19},"source":"start"},"name":"start"},"value":{"type":"MemberExpression","location":{"start":{"line":3,"column":21},"end":{"line":3,"column":37},"source":"v.timeRangeStart"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":21},"end":{"line":3,"column":22},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":37},"source":"timeRangeStart"},"name":"timeRangeStart"}}},{"type":"Property","location":{"start":{"line":3,"column":39},"end":{"line":3,"column":60},"source":"stop: v.timeRangeStop"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":39},"end":{"line":3,"column":43},"source":"stop"},"name":"stop"},"value":{"type":"MemberExpression","location":{"start":{"line":3,"column":45},"end":{"line":3,"column":60},"source":"v.timeRangeStop"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":45},"end":{"line":3,"column":46},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":47},"end":{"line":3,"column":60},"source":"timeRangeStop"},"name":"timeRangeStop"}}}]}]}}}]}'
      )

      runTest(ast, false, outerWindowPeriod)
    })

    describe('user declared v.windowPeriod', () => {
      /*
          import "array"
          v = {windowPeriod: 2444}
          array.from(rows: [{x: v.windowPeriod}])
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":3,"column":40},"source":"import \\"array\\"\\nv = {windowPeriod: 2444}\\narray.from(rows: [{x: v.windowPeriod}])"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":15},"source":"import \\"array\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":15},"source":"\\"array\\""},"value":"array"}}],"body":[{"type":"VariableAssignment","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":25},"source":"v = {windowPeriod: 2444}"},"id":{"location":{"start":{"line":2,"column":1},"end":{"line":2,"column":2},"source":"v"},"name":"v"},"init":{"type":"ObjectExpression","location":{"start":{"line":2,"column":5},"end":{"line":2,"column":25},"source":"{windowPeriod: 2444}"},"properties":[{"type":"Property","location":{"start":{"line":2,"column":6},"end":{"line":2,"column":24},"source":"windowPeriod: 2444"},"key":{"type":"Identifier","location":{"start":{"line":2,"column":6},"end":{"line":2,"column":18},"source":"windowPeriod"},"name":"windowPeriod"},"value":{"type":"IntegerLiteral","location":{"start":{"line":2,"column":20},"end":{"line":2,"column":24},"source":"2444"},"value":"2444"}}]}},{"type":"ExpressionStatement","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"expression":{"type":"CallExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"callee":{"type":"MemberExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":11},"source":"array.from"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":6},"source":"array"},"name":"array"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":7},"end":{"line":3,"column":11},"source":"from"},"name":"from"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":16},"source":"rows"},"name":"rows"},"value":{"type":"ArrayExpression","location":{"start":{"line":3,"column":18},"end":{"line":3,"column":39},"source":"[{x: v.windowPeriod}]"},"elements":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":19},"end":{"line":3,"column":38},"source":"{x: v.windowPeriod}"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":20},"end":{"line":3,"column":37},"source":"x: v.windowPeriod"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":20},"end":{"line":3,"column":21},"source":"x"},"name":"x"},"value":{"type":"MemberExpression","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":25},"end":{"line":3,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}]}}]}]}}]}'
      )

      runTest(ast, false, 2444)
    })

    describe('user declared option v.windowPeriod', () => {
      /*
          import "array"
          option v = {windowPeriod: 2444}
          array.from(rows: [{x: v.windowPeriod}])
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":3,"column":40},"source":"import \\"array\\"\\noption v = {windowPeriod: 2444}\\narray.from(rows: [{x: v.windowPeriod}])"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":15},"source":"import \\"array\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":15},"source":"\\"array\\""},"value":"array"}}],"body":[{"type":"OptionStatement","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":32},"source":"option v = {windowPeriod: 2444}"},"assignment":{"type":"VariableAssignment","location":{"start":{"line":2,"column":8},"end":{"line":2,"column":32},"source":"v = {windowPeriod: 2444}"},"id":{"location":{"start":{"line":2,"column":8},"end":{"line":2,"column":9},"source":"v"},"name":"v"},"init":{"type":"ObjectExpression","location":{"start":{"line":2,"column":12},"end":{"line":2,"column":32},"source":"{windowPeriod: 2444}"},"properties":[{"type":"Property","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":31},"source":"windowPeriod: 2444"},"key":{"type":"Identifier","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":25},"source":"windowPeriod"},"name":"windowPeriod"},"value":{"type":"IntegerLiteral","location":{"start":{"line":2,"column":27},"end":{"line":2,"column":31},"source":"2444"},"value":"2444"}}]}}},{"type":"ExpressionStatement","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"expression":{"type":"CallExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"callee":{"type":"MemberExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":11},"source":"array.from"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":6},"source":"array"},"name":"array"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":7},"end":{"line":3,"column":11},"source":"from"},"name":"from"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":16},"source":"rows"},"name":"rows"},"value":{"type":"ArrayExpression","location":{"start":{"line":3,"column":18},"end":{"line":3,"column":39},"source":"[{x: v.windowPeriod}]"},"elements":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":19},"end":{"line":3,"column":38},"source":"{x: v.windowPeriod}"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":20},"end":{"line":3,"column":37},"source":"x: v.windowPeriod"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":20},"end":{"line":3,"column":21},"source":"x"},"name":"x"},"value":{"type":"MemberExpression","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":25},"end":{"line":3,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}]}}]}]}}]}'
      )

      runTest(ast, false, 2444)
    })

    describe('returns fallback windowPeriod, when cannot understand the result', () => {
      /*
          import "array"
          v = {windowPeriod: 'gerbils'}
          array.from(rows: [{x: v.windowPeriod}])
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":3,"column":40},"source":"import \\"array\\"\\nv = {windowPeriod: \'gerbils\'}\\narray.from(rows: [{x: v.windowPeriod}])"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":15},"source":"import \\"array\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":15},"source":"\\"array\\""},"value":"array"}}],"body":[{"type":"VariableAssignment","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":30},"source":"v = {windowPeriod: \'gerbils\'}"},"id":{"location":{"start":{"line":2,"column":1},"end":{"line":2,"column":2},"source":"v"},"name":"v"},"init":{"type":"ObjectExpression","location":{"start":{"line":2,"column":5},"end":{"line":2,"column":30},"source":"{windowPeriod: \'gerbils\'}"},"properties":[{"type":"Property","location":{"start":{"line":2,"column":6},"end":{"line":2,"column":28},"source":"windowPeriod: \'gerbils"},"errors":[{"msg":"invalid expression @2:28-2:29: \'"}],"key":{"type":"Identifier","location":{"start":{"line":2,"column":6},"end":{"line":2,"column":18},"source":"windowPeriod"},"name":"windowPeriod"},"value":{"type":"Identifier","location":{"start":{"line":2,"column":21},"end":{"line":2,"column":28},"source":"gerbils"},"errors":[{"msg":"invalid expression @2:20-2:21: \'"}],"name":"gerbils"}}]}},{"type":"ExpressionStatement","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"expression":{"type":"CallExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"callee":{"type":"MemberExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":11},"source":"array.from"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":6},"source":"array"},"name":"array"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":7},"end":{"line":3,"column":11},"source":"from"},"name":"from"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":16},"source":"rows"},"name":"rows"},"value":{"type":"ArrayExpression","location":{"start":{"line":3,"column":18},"end":{"line":3,"column":39},"source":"[{x: v.windowPeriod}]"},"elements":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":19},"end":{"line":3,"column":38},"source":"{x: v.windowPeriod}"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":20},"end":{"line":3,"column":37},"source":"x: v.windowPeriod"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":20},"end":{"line":3,"column":21},"source":"x"},"name":"x"},"value":{"type":"MemberExpression","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":25},"end":{"line":3,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}]}}]}]}}]}'
      )

      runTest(ast, false, FALLBACK_WINDOW_PERIOD)
    })
  })

  describe('Can handle scoping:', () => {
    describe('use outerScope windowPeriod, without a range in the query', () => {
      /*
          import "array"
          array.from(rows: [{x: v.windowPeriod}])
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":2,"column":40},"source":"import \\"array\\"\\narray.from(rows: [{x: v.windowPeriod}])"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":15},"source":"import \\"array\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":15},"source":"\\"array\\""},"value":"array"}}],"body":[{"type":"ExpressionStatement","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"expression":{"type":"CallExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"callee":{"type":"MemberExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":11},"source":"array.from"},"object":{"type":"Identifier","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":6},"source":"array"},"name":"array"},"property":{"type":"Identifier","location":{"start":{"line":2,"column":7},"end":{"line":2,"column":11},"source":"from"},"name":"from"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":2,"column":12},"end":{"line":2,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"properties":[{"type":"Property","location":{"start":{"line":2,"column":12},"end":{"line":2,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"key":{"type":"Identifier","location":{"start":{"line":2,"column":12},"end":{"line":2,"column":16},"source":"rows"},"name":"rows"},"value":{"type":"ArrayExpression","location":{"start":{"line":2,"column":18},"end":{"line":2,"column":39},"source":"[{x: v.windowPeriod}]"},"elements":[{"type":"ObjectExpression","location":{"start":{"line":2,"column":19},"end":{"line":2,"column":38},"source":"{x: v.windowPeriod}"},"properties":[{"type":"Property","location":{"start":{"line":2,"column":20},"end":{"line":2,"column":37},"source":"x: v.windowPeriod"},"key":{"type":"Identifier","location":{"start":{"line":2,"column":20},"end":{"line":2,"column":21},"source":"x"},"name":"x"},"value":{"type":"MemberExpression","location":{"start":{"line":2,"column":23},"end":{"line":2,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":2,"column":23},"end":{"line":2,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":2,"column":25},"end":{"line":2,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}]}}]}]}}]}'
      )

      runTest(ast, true, outerWindowPeriod)
    })

    describe('use v.windowPeriod from outer UI scope range', () => {
      /*
          import "influxdata/influxdb/sample"
          sample.data(set: "airSensor")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> yield(name: "${v.windowPeriod}")
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":4,"column":40},"source":"import \\"influxdata/influxdb/sample\\"\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"ExpressionStatement","location":{"start":{"line":2,"column":1},"end":{"line":4,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"expression":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":4,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"argument":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":3,"column":61},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)"},"argument":{"type":"CallExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":2,"column":8},"end":{"line":2,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":2,"column":18},"end":{"line":2,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":3,"column":8},"end":{"line":3,"column":61},"source":"range(start: v.timeRangeStart, stop: v.timeRangeStop)"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":8},"end":{"line":3,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":60},"source":"start: v.timeRangeStart, stop: v.timeRangeStop"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":37},"source":"start: v.timeRangeStart"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":19},"source":"start"},"name":"start"},"value":{"type":"MemberExpression","location":{"start":{"line":3,"column":21},"end":{"line":3,"column":37},"source":"v.timeRangeStart"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":21},"end":{"line":3,"column":22},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":37},"source":"timeRangeStart"},"name":"timeRangeStart"}}},{"type":"Property","location":{"start":{"line":3,"column":39},"end":{"line":3,"column":60},"source":"stop: v.timeRangeStop"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":39},"end":{"line":3,"column":43},"source":"stop"},"name":"stop"},"value":{"type":"MemberExpression","location":{"start":{"line":3,"column":45},"end":{"line":3,"column":60},"source":"v.timeRangeStop"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":45},"end":{"line":3,"column":46},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":47},"end":{"line":3,"column":60},"source":"timeRangeStop"},"name":"timeRangeStop"}}}]}]}},"call":{"location":{"start":{"line":4,"column":8},"end":{"line":4,"column":40},"source":"yield(name: \\"${v.windowPeriod}\\")"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":8},"end":{"line":4,"column":13},"source":"yield"},"name":"yield"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"properties":[{"type":"Property","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"key":{"type":"Identifier","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":18},"source":"name"},"name":"name"},"value":{"type":"StringExpression","location":{"start":{"line":4,"column":20},"end":{"line":4,"column":39},"source":"\\"${v.windowPeriod}\\""},"parts":[{"type":"InterpolatedPart","location":{"start":{"line":4,"column":21},"end":{"line":4,"column":38},"source":"${v.windowPeriod}"},"expression":{"type":"MemberExpression","location":{"start":{"line":4,"column":23},"end":{"line":4,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":4,"column":23},"end":{"line":4,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":4,"column":25},"end":{"line":4,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}}]}]}}}]}'
      )

      runTest(ast, true, outerWindowPeriod)
    })

    describe('use v.windowPeriod extracted from range transformation', () => {
      /*
          import "influxdata/influxdb/sample"
          sample.data(set: "airSensor")
              |> range(start: -12h, stop: now())
              |> yield(name: "${v.windowPeriod}")
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":4,"column":40},"source":"import \\"influxdata/influxdb/sample\\"\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"ExpressionStatement","location":{"start":{"line":2,"column":1},"end":{"line":4,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"expression":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":4,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"argument":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":3,"column":39},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())"},"argument":{"type":"CallExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":2,"column":8},"end":{"line":2,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":2,"column":18},"end":{"line":2,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":3,"column":8},"end":{"line":3,"column":39},"source":"range(start: -12h, stop: now())"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":8},"end":{"line":3,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":38},"source":"start: -12h, stop: now()"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":25},"source":"start: -12h"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":19},"source":"start"},"name":"start"},"value":{"type":"UnaryExpression","location":{"start":{"line":3,"column":21},"end":{"line":3,"column":25},"source":"-12h"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":3,"column":22},"end":{"line":3,"column":25},"source":"12h"},"values":[{"magnitude":12,"unit":"h"}]}}},{"type":"Property","location":{"start":{"line":3,"column":27},"end":{"line":3,"column":38},"source":"stop: now()"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":27},"end":{"line":3,"column":31},"source":"stop"},"name":"stop"},"value":{"type":"CallExpression","location":{"start":{"line":3,"column":33},"end":{"line":3,"column":38},"source":"now()"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":33},"end":{"line":3,"column":36},"source":"now"},"name":"now"}}}]}]}},"call":{"location":{"start":{"line":4,"column":8},"end":{"line":4,"column":40},"source":"yield(name: \\"${v.windowPeriod}\\")"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":8},"end":{"line":4,"column":13},"source":"yield"},"name":"yield"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"properties":[{"type":"Property","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"key":{"type":"Identifier","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":18},"source":"name"},"name":"name"},"value":{"type":"StringExpression","location":{"start":{"line":4,"column":20},"end":{"line":4,"column":39},"source":"\\"${v.windowPeriod}\\""},"parts":[{"type":"InterpolatedPart","location":{"start":{"line":4,"column":21},"end":{"line":4,"column":38},"source":"${v.windowPeriod}"},"expression":{"type":"MemberExpression","location":{"start":{"line":4,"column":23},"end":{"line":4,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":4,"column":23},"end":{"line":4,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":4,"column":25},"end":{"line":4,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}}]}]}}}]}'
      )

      runTest(ast, true, 120000)
    })

    describe('use v.windowPeriod from inner scope', () => {
      /*
          import "influxdata/influxdb/sample"
          sample.data(set: "airSensor")
          |> range(start: -12h, stop: now())
          |> map(fn: (r) => {
              v = {windowPeriod: 2444}
              return ({ r with _value: v.windowPeriod })
          })
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":7,"column":7},"source":"import \\"influxdata/influxdb/sample\\"\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> map(fn: (r) => {\\n        v = {windowPeriod: 2444}\\n        return ({ r with _value: v.windowPeriod })\\n    })"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"ExpressionStatement","location":{"start":{"line":2,"column":1},"end":{"line":7,"column":7},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> map(fn: (r) => {\\n        v = {windowPeriod: 2444}\\n        return ({ r with _value: v.windowPeriod })\\n    })"},"expression":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":7,"column":7},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> map(fn: (r) => {\\n        v = {windowPeriod: 2444}\\n        return ({ r with _value: v.windowPeriod })\\n    })"},"argument":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":3,"column":39},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())"},"argument":{"type":"CallExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":2,"column":8},"end":{"line":2,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":2,"column":18},"end":{"line":2,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":3,"column":8},"end":{"line":3,"column":39},"source":"range(start: -12h, stop: now())"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":8},"end":{"line":3,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":38},"source":"start: -12h, stop: now()"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":25},"source":"start: -12h"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":19},"source":"start"},"name":"start"},"value":{"type":"UnaryExpression","location":{"start":{"line":3,"column":21},"end":{"line":3,"column":25},"source":"-12h"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":3,"column":22},"end":{"line":3,"column":25},"source":"12h"},"values":[{"magnitude":12,"unit":"h"}]}}},{"type":"Property","location":{"start":{"line":3,"column":27},"end":{"line":3,"column":38},"source":"stop: now()"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":27},"end":{"line":3,"column":31},"source":"stop"},"name":"stop"},"value":{"type":"CallExpression","location":{"start":{"line":3,"column":33},"end":{"line":3,"column":38},"source":"now()"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":33},"end":{"line":3,"column":36},"source":"now"},"name":"now"}}}]}]}},"call":{"location":{"start":{"line":4,"column":8},"end":{"line":7,"column":7},"source":"map(fn: (r) => {\\n        v = {windowPeriod: 2444}\\n        return ({ r with _value: v.windowPeriod })\\n    })"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":8},"end":{"line":4,"column":11},"source":"map"},"name":"map"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":4,"column":12},"end":{"line":7,"column":6},"source":"fn: (r) => {\\n        v = {windowPeriod: 2444}\\n        return ({ r with _value: v.windowPeriod })\\n    }"},"properties":[{"type":"Property","location":{"start":{"line":4,"column":12},"end":{"line":7,"column":6},"source":"fn: (r) => {\\n        v = {windowPeriod: 2444}\\n        return ({ r with _value: v.windowPeriod })\\n    }"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":12},"end":{"line":4,"column":14},"source":"fn"},"name":"fn"},"value":{"type":"FunctionExpression","location":{"start":{"line":4,"column":16},"end":{"line":7,"column":6},"source":"(r) => {\\n        v = {windowPeriod: 2444}\\n        return ({ r with _value: v.windowPeriod })\\n    }"},"params":[{"type":"Property","location":{"start":{"line":4,"column":17},"end":{"line":4,"column":18},"source":"r"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":17},"end":{"line":4,"column":18},"source":"r"},"name":"r"},"value":null}],"body":{"type":"Block","location":{"start":{"line":4,"column":23},"end":{"line":7,"column":6},"source":"{\\n        v = {windowPeriod: 2444}\\n        return ({ r with _value: v.windowPeriod })\\n    }"},"body":[{"type":"VariableAssignment","location":{"start":{"line":5,"column":9},"end":{"line":5,"column":33},"source":"v = {windowPeriod: 2444}"},"id":{"location":{"start":{"line":5,"column":9},"end":{"line":5,"column":10},"source":"v"},"name":"v"},"init":{"type":"ObjectExpression","location":{"start":{"line":5,"column":13},"end":{"line":5,"column":33},"source":"{windowPeriod: 2444}"},"properties":[{"type":"Property","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":32},"source":"windowPeriod: 2444"},"key":{"type":"Identifier","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":26},"source":"windowPeriod"},"name":"windowPeriod"},"value":{"type":"IntegerLiteral","location":{"start":{"line":5,"column":28},"end":{"line":5,"column":32},"source":"2444"},"value":"2444"}}]}},{"type":"ReturnStatement","location":{"start":{"line":6,"column":9},"end":{"line":6,"column":51},"source":"return ({ r with _value: v.windowPeriod })"},"argument":{"type":"ParenExpression","location":{"start":{"line":6,"column":16},"end":{"line":6,"column":51},"source":"({ r with _value: v.windowPeriod })"},"expression":{"type":"ObjectExpression","location":{"start":{"line":6,"column":17},"end":{"line":6,"column":50},"source":"{ r with _value: v.windowPeriod }"},"with":{"location":{"start":{"line":6,"column":19},"end":{"line":6,"column":20},"source":"r"},"name":"r"},"properties":[{"type":"Property","location":{"start":{"line":6,"column":26},"end":{"line":6,"column":48},"source":"_value: v.windowPeriod"},"key":{"type":"Identifier","location":{"start":{"line":6,"column":26},"end":{"line":6,"column":32},"source":"_value"},"name":"_value"},"value":{"type":"MemberExpression","location":{"start":{"line":6,"column":34},"end":{"line":6,"column":48},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":6,"column":34},"end":{"line":6,"column":35},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":6,"column":36},"end":{"line":6,"column":48},"source":"windowPeriod"},"name":"windowPeriod"}}}]}}}]}}}]}]}}}]}'
      )

      runTest(ast, false, 2444)
    })

    describe('v.windowPeriod from inner scope, does not overwrite outer scope', () => {
      /*
          import "influxdata/influxdb/sample"
          import "array"
          sample.data(set: "airSensor")
          |> range(start: -12h, stop: now())
          |> map(fn: (r) => {
              v = {windowPeriod: 2444}
              return ({ r with _value: "foo" })
          })
          array.from(rows: [{x: v.windowPeriod}])
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":9,"column":40},"source":"import \\"influxdata/influxdb/sample\\"\\nimport \\"array\\"\\nsample.data(set: \\"airSensor\\")\\n|> range(start: -12h, stop: now())\\n|> map(fn: (r) => {\\n    v = {windowPeriod: 2444}\\n    return ({ r with _value: \\"foo\\" })\\n})\\narray.from(rows: [{x: v.windowPeriod}])"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}},{"type":"ImportDeclaration","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":15},"source":"import \\"array\\""},"as":null,"path":{"location":{"start":{"line":2,"column":8},"end":{"line":2,"column":15},"source":"\\"array\\""},"value":"array"}}],"body":[{"type":"ExpressionStatement","location":{"start":{"line":3,"column":1},"end":{"line":8,"column":3},"source":"sample.data(set: \\"airSensor\\")\\n|> range(start: -12h, stop: now())\\n|> map(fn: (r) => {\\n    v = {windowPeriod: 2444}\\n    return ({ r with _value: \\"foo\\" })\\n})"},"expression":{"type":"PipeExpression","location":{"start":{"line":3,"column":1},"end":{"line":8,"column":3},"source":"sample.data(set: \\"airSensor\\")\\n|> range(start: -12h, stop: now())\\n|> map(fn: (r) => {\\n    v = {windowPeriod: 2444}\\n    return ({ r with _value: \\"foo\\" })\\n})"},"argument":{"type":"PipeExpression","location":{"start":{"line":3,"column":1},"end":{"line":4,"column":35},"source":"sample.data(set: \\"airSensor\\")\\n|> range(start: -12h, stop: now())"},"argument":{"type":"CallExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":8},"end":{"line":3,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":13},"end":{"line":3,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":3,"column":13},"end":{"line":3,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":3,"column":13},"end":{"line":3,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":3,"column":18},"end":{"line":3,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":4,"column":4},"end":{"line":4,"column":35},"source":"range(start: -12h, stop: now())"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":4},"end":{"line":4,"column":9},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":4,"column":10},"end":{"line":4,"column":34},"source":"start: -12h, stop: now()"},"properties":[{"type":"Property","location":{"start":{"line":4,"column":10},"end":{"line":4,"column":21},"source":"start: -12h"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":10},"end":{"line":4,"column":15},"source":"start"},"name":"start"},"value":{"type":"UnaryExpression","location":{"start":{"line":4,"column":17},"end":{"line":4,"column":21},"source":"-12h"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":4,"column":18},"end":{"line":4,"column":21},"source":"12h"},"values":[{"magnitude":12,"unit":"h"}]}}},{"type":"Property","location":{"start":{"line":4,"column":23},"end":{"line":4,"column":34},"source":"stop: now()"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":23},"end":{"line":4,"column":27},"source":"stop"},"name":"stop"},"value":{"type":"CallExpression","location":{"start":{"line":4,"column":29},"end":{"line":4,"column":34},"source":"now()"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":29},"end":{"line":4,"column":32},"source":"now"},"name":"now"}}}]}]}},"call":{"location":{"start":{"line":5,"column":4},"end":{"line":8,"column":3},"source":"map(fn: (r) => {\\n    v = {windowPeriod: 2444}\\n    return ({ r with _value: \\"foo\\" })\\n})"},"callee":{"type":"Identifier","location":{"start":{"line":5,"column":4},"end":{"line":5,"column":7},"source":"map"},"name":"map"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":5,"column":8},"end":{"line":8,"column":2},"source":"fn: (r) => {\\n    v = {windowPeriod: 2444}\\n    return ({ r with _value: \\"foo\\" })\\n}"},"properties":[{"type":"Property","location":{"start":{"line":5,"column":8},"end":{"line":8,"column":2},"source":"fn: (r) => {\\n    v = {windowPeriod: 2444}\\n    return ({ r with _value: \\"foo\\" })\\n}"},"key":{"type":"Identifier","location":{"start":{"line":5,"column":8},"end":{"line":5,"column":10},"source":"fn"},"name":"fn"},"value":{"type":"FunctionExpression","location":{"start":{"line":5,"column":12},"end":{"line":8,"column":2},"source":"(r) => {\\n    v = {windowPeriod: 2444}\\n    return ({ r with _value: \\"foo\\" })\\n}"},"params":[{"type":"Property","location":{"start":{"line":5,"column":13},"end":{"line":5,"column":14},"source":"r"},"key":{"type":"Identifier","location":{"start":{"line":5,"column":13},"end":{"line":5,"column":14},"source":"r"},"name":"r"},"value":null}],"body":{"type":"Block","location":{"start":{"line":5,"column":19},"end":{"line":8,"column":2},"source":"{\\n    v = {windowPeriod: 2444}\\n    return ({ r with _value: \\"foo\\" })\\n}"},"body":[{"type":"VariableAssignment","location":{"start":{"line":6,"column":5},"end":{"line":6,"column":29},"source":"v = {windowPeriod: 2444}"},"id":{"location":{"start":{"line":6,"column":5},"end":{"line":6,"column":6},"source":"v"},"name":"v"},"init":{"type":"ObjectExpression","location":{"start":{"line":6,"column":9},"end":{"line":6,"column":29},"source":"{windowPeriod: 2444}"},"properties":[{"type":"Property","location":{"start":{"line":6,"column":10},"end":{"line":6,"column":28},"source":"windowPeriod: 2444"},"key":{"type":"Identifier","location":{"start":{"line":6,"column":10},"end":{"line":6,"column":22},"source":"windowPeriod"},"name":"windowPeriod"},"value":{"type":"IntegerLiteral","location":{"start":{"line":6,"column":24},"end":{"line":6,"column":28},"source":"2444"},"value":"2444"}}]}},{"type":"ReturnStatement","location":{"start":{"line":7,"column":5},"end":{"line":7,"column":38},"source":"return ({ r with _value: \\"foo\\" })"},"argument":{"type":"ParenExpression","location":{"start":{"line":7,"column":12},"end":{"line":7,"column":38},"source":"({ r with _value: \\"foo\\" })"},"expression":{"type":"ObjectExpression","location":{"start":{"line":7,"column":13},"end":{"line":7,"column":37},"source":"{ r with _value: \\"foo\\" }"},"with":{"location":{"start":{"line":7,"column":15},"end":{"line":7,"column":16},"source":"r"},"name":"r"},"properties":[{"type":"Property","location":{"start":{"line":7,"column":22},"end":{"line":7,"column":35},"source":"_value: \\"foo\\""},"key":{"type":"Identifier","location":{"start":{"line":7,"column":22},"end":{"line":7,"column":28},"source":"_value"},"name":"_value"},"value":{"type":"StringLiteral","location":{"start":{"line":7,"column":30},"end":{"line":7,"column":35},"source":"\\"foo\\""},"value":"foo"}}]}}}]}}}]}]}}},{"type":"ExpressionStatement","location":{"start":{"line":9,"column":1},"end":{"line":9,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"expression":{"type":"CallExpression","location":{"start":{"line":9,"column":1},"end":{"line":9,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"callee":{"type":"MemberExpression","location":{"start":{"line":9,"column":1},"end":{"line":9,"column":11},"source":"array.from"},"object":{"type":"Identifier","location":{"start":{"line":9,"column":1},"end":{"line":9,"column":6},"source":"array"},"name":"array"},"property":{"type":"Identifier","location":{"start":{"line":9,"column":7},"end":{"line":9,"column":11},"source":"from"},"name":"from"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":9,"column":12},"end":{"line":9,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"properties":[{"type":"Property","location":{"start":{"line":9,"column":12},"end":{"line":9,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"key":{"type":"Identifier","location":{"start":{"line":9,"column":12},"end":{"line":9,"column":16},"source":"rows"},"name":"rows"},"value":{"type":"ArrayExpression","location":{"start":{"line":9,"column":18},"end":{"line":9,"column":39},"source":"[{x: v.windowPeriod}]"},"elements":[{"type":"ObjectExpression","location":{"start":{"line":9,"column":19},"end":{"line":9,"column":38},"source":"{x: v.windowPeriod}"},"properties":[{"type":"Property","location":{"start":{"line":9,"column":20},"end":{"line":9,"column":37},"source":"x: v.windowPeriod"},"key":{"type":"Identifier","location":{"start":{"line":9,"column":20},"end":{"line":9,"column":21},"source":"x"},"name":"x"},"value":{"type":"MemberExpression","location":{"start":{"line":9,"column":23},"end":{"line":9,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":9,"column":23},"end":{"line":9,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":9,"column":25},"end":{"line":9,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}]}}]}]}}]}'
      )

      runTest(ast, true, outerWindowPeriod)
    })

    describe('detect use of v.windowPeriod in the inner lambda', () => {
      /*
          import "influxdata/influxdb/sample"
          sample.data(set: "airSensor")
              |> range(start: -12h, stop: now())
              |> map(fn: (r) => {
                  return ({ r with _value: "${v.windowPeriod}" })
              })
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":6,"column":7},"source":"import \\"influxdata/influxdb/sample\\"\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> map(fn: (r) => {\\n        return ({ r with _value: \\"${v.windowPeriod}\\" })\\n    })"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"ExpressionStatement","location":{"start":{"line":2,"column":1},"end":{"line":6,"column":7},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> map(fn: (r) => {\\n        return ({ r with _value: \\"${v.windowPeriod}\\" })\\n    })"},"expression":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":6,"column":7},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> map(fn: (r) => {\\n        return ({ r with _value: \\"${v.windowPeriod}\\" })\\n    })"},"argument":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":3,"column":39},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())"},"argument":{"type":"CallExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":2,"column":8},"end":{"line":2,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":2,"column":18},"end":{"line":2,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":3,"column":8},"end":{"line":3,"column":39},"source":"range(start: -12h, stop: now())"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":8},"end":{"line":3,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":38},"source":"start: -12h, stop: now()"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":25},"source":"start: -12h"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":19},"source":"start"},"name":"start"},"value":{"type":"UnaryExpression","location":{"start":{"line":3,"column":21},"end":{"line":3,"column":25},"source":"-12h"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":3,"column":22},"end":{"line":3,"column":25},"source":"12h"},"values":[{"magnitude":12,"unit":"h"}]}}},{"type":"Property","location":{"start":{"line":3,"column":27},"end":{"line":3,"column":38},"source":"stop: now()"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":27},"end":{"line":3,"column":31},"source":"stop"},"name":"stop"},"value":{"type":"CallExpression","location":{"start":{"line":3,"column":33},"end":{"line":3,"column":38},"source":"now()"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":33},"end":{"line":3,"column":36},"source":"now"},"name":"now"}}}]}]}},"call":{"location":{"start":{"line":4,"column":8},"end":{"line":6,"column":7},"source":"map(fn: (r) => {\\n        return ({ r with _value: \\"${v.windowPeriod}\\" })\\n    })"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":8},"end":{"line":4,"column":11},"source":"map"},"name":"map"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":4,"column":12},"end":{"line":6,"column":6},"source":"fn: (r) => {\\n        return ({ r with _value: \\"${v.windowPeriod}\\" })\\n    }"},"properties":[{"type":"Property","location":{"start":{"line":4,"column":12},"end":{"line":6,"column":6},"source":"fn: (r) => {\\n        return ({ r with _value: \\"${v.windowPeriod}\\" })\\n    }"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":12},"end":{"line":4,"column":14},"source":"fn"},"name":"fn"},"value":{"type":"FunctionExpression","location":{"start":{"line":4,"column":16},"end":{"line":6,"column":6},"source":"(r) => {\\n        return ({ r with _value: \\"${v.windowPeriod}\\" })\\n    }"},"params":[{"type":"Property","location":{"start":{"line":4,"column":17},"end":{"line":4,"column":18},"source":"r"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":17},"end":{"line":4,"column":18},"source":"r"},"name":"r"},"value":null}],"body":{"type":"Block","location":{"start":{"line":4,"column":23},"end":{"line":6,"column":6},"source":"{\\n        return ({ r with _value: \\"${v.windowPeriod}\\" })\\n    }"},"body":[{"type":"ReturnStatement","location":{"start":{"line":5,"column":9},"end":{"line":5,"column":56},"source":"return ({ r with _value: \\"${v.windowPeriod}\\" })"},"argument":{"type":"ParenExpression","location":{"start":{"line":5,"column":16},"end":{"line":5,"column":56},"source":"({ r with _value: \\"${v.windowPeriod}\\" })"},"expression":{"type":"ObjectExpression","location":{"start":{"line":5,"column":17},"end":{"line":5,"column":55},"source":"{ r with _value: \\"${v.windowPeriod}\\" }"},"with":{"location":{"start":{"line":5,"column":19},"end":{"line":5,"column":20},"source":"r"},"name":"r"},"properties":[{"type":"Property","location":{"start":{"line":5,"column":26},"end":{"line":5,"column":53},"source":"_value: \\"${v.windowPeriod}\\""},"key":{"type":"Identifier","location":{"start":{"line":5,"column":26},"end":{"line":5,"column":32},"source":"_value"},"name":"_value"},"value":{"type":"StringExpression","location":{"start":{"line":5,"column":34},"end":{"line":5,"column":53},"source":"\\"${v.windowPeriod}\\""},"parts":[{"type":"InterpolatedPart","location":{"start":{"line":5,"column":35},"end":{"line":5,"column":52},"source":"${v.windowPeriod}"},"expression":{"type":"MemberExpression","location":{"start":{"line":5,"column":37},"end":{"line":5,"column":51},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":5,"column":37},"end":{"line":5,"column":38},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":5,"column":39},"end":{"line":5,"column":51},"source":"windowPeriod"},"name":"windowPeriod"}}}]}}]}}}]}}}]}]}}}]}'
      )

      runTest(ast, true, 120000)
    })

    describe('two timeRanges used. Should grab the proper one for windowPeriod.', () => {
      /*
          import "influxdata/influxdb/sample"
          sample.data(set: "airSensor")
              |> range(start: -12h, stop: now())
              |> yield(name: "${v.windowPeriod}")
          sample.data(set: "airSensor")
              |> range(start: -15m, stop: now())
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":6,"column":39},"source":"import \\"influxdata/influxdb/sample\\"\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> yield(name: \\"${v.windowPeriod}\\")\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: -15m, stop: now())"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"ExpressionStatement","location":{"start":{"line":2,"column":1},"end":{"line":4,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"expression":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":4,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"argument":{"type":"PipeExpression","location":{"start":{"line":2,"column":1},"end":{"line":3,"column":39},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())"},"argument":{"type":"CallExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":2,"column":8},"end":{"line":2,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":2,"column":13},"end":{"line":2,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":2,"column":18},"end":{"line":2,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":3,"column":8},"end":{"line":3,"column":39},"source":"range(start: -12h, stop: now())"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":8},"end":{"line":3,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":38},"source":"start: -12h, stop: now()"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":25},"source":"start: -12h"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":14},"end":{"line":3,"column":19},"source":"start"},"name":"start"},"value":{"type":"UnaryExpression","location":{"start":{"line":3,"column":21},"end":{"line":3,"column":25},"source":"-12h"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":3,"column":22},"end":{"line":3,"column":25},"source":"12h"},"values":[{"magnitude":12,"unit":"h"}]}}},{"type":"Property","location":{"start":{"line":3,"column":27},"end":{"line":3,"column":38},"source":"stop: now()"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":27},"end":{"line":3,"column":31},"source":"stop"},"name":"stop"},"value":{"type":"CallExpression","location":{"start":{"line":3,"column":33},"end":{"line":3,"column":38},"source":"now()"},"callee":{"type":"Identifier","location":{"start":{"line":3,"column":33},"end":{"line":3,"column":36},"source":"now"},"name":"now"}}}]}]}},"call":{"location":{"start":{"line":4,"column":8},"end":{"line":4,"column":40},"source":"yield(name: \\"${v.windowPeriod}\\")"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":8},"end":{"line":4,"column":13},"source":"yield"},"name":"yield"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"properties":[{"type":"Property","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"key":{"type":"Identifier","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":18},"source":"name"},"name":"name"},"value":{"type":"StringExpression","location":{"start":{"line":4,"column":20},"end":{"line":4,"column":39},"source":"\\"${v.windowPeriod}\\""},"parts":[{"type":"InterpolatedPart","location":{"start":{"line":4,"column":21},"end":{"line":4,"column":38},"source":"${v.windowPeriod}"},"expression":{"type":"MemberExpression","location":{"start":{"line":4,"column":23},"end":{"line":4,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":4,"column":23},"end":{"line":4,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":4,"column":25},"end":{"line":4,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}}]}]}}},{"type":"ExpressionStatement","location":{"start":{"line":5,"column":1},"end":{"line":6,"column":39},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -15m, stop: now())"},"expression":{"type":"PipeExpression","location":{"start":{"line":5,"column":1},"end":{"line":6,"column":39},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -15m, stop: now())"},"argument":{"type":"CallExpression","location":{"start":{"line":5,"column":1},"end":{"line":5,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":5,"column":1},"end":{"line":5,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":5,"column":1},"end":{"line":5,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":5,"column":8},"end":{"line":5,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":5,"column":13},"end":{"line":5,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":5,"column":13},"end":{"line":5,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":5,"column":13},"end":{"line":5,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":5,"column":18},"end":{"line":5,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":6,"column":8},"end":{"line":6,"column":39},"source":"range(start: -15m, stop: now())"},"callee":{"type":"Identifier","location":{"start":{"line":6,"column":8},"end":{"line":6,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":6,"column":14},"end":{"line":6,"column":38},"source":"start: -15m, stop: now()"},"properties":[{"type":"Property","location":{"start":{"line":6,"column":14},"end":{"line":6,"column":25},"source":"start: -15m"},"key":{"type":"Identifier","location":{"start":{"line":6,"column":14},"end":{"line":6,"column":19},"source":"start"},"name":"start"},"value":{"type":"UnaryExpression","location":{"start":{"line":6,"column":21},"end":{"line":6,"column":25},"source":"-15m"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":6,"column":22},"end":{"line":6,"column":25},"source":"15m"},"values":[{"magnitude":15,"unit":"m"}]}}},{"type":"Property","location":{"start":{"line":6,"column":27},"end":{"line":6,"column":38},"source":"stop: now()"},"key":{"type":"Identifier","location":{"start":{"line":6,"column":27},"end":{"line":6,"column":31},"source":"stop"},"name":"stop"},"value":{"type":"CallExpression","location":{"start":{"line":6,"column":33},"end":{"line":6,"column":38},"source":"now()"},"callee":{"type":"Identifier","location":{"start":{"line":6,"column":33},"end":{"line":6,"column":36},"source":"now"},"name":"now"}}}]}]}}}]}'
      )

      runTest(ast, true, 120000)
    })

    describe("when encountering a range node, only add a v.windowPeriod to the global scope if it doesn't already exist", () => {
      /*
          import "influxdata/influxdb/sample"
          v = {windowPeriod: 2444}
          sample.data(set: "airSensor")
              |> range(start: -12h, stop: now())
              |> yield(name: "${v.windowPeriod}")
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":5,"column":40},"source":"import \\"influxdata/influxdb/sample\\"\\nv = {windowPeriod: 2444}\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"VariableAssignment","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":25},"source":"v = {windowPeriod: 2444}"},"id":{"location":{"start":{"line":2,"column":1},"end":{"line":2,"column":2},"source":"v"},"name":"v"},"init":{"type":"ObjectExpression","location":{"start":{"line":2,"column":5},"end":{"line":2,"column":25},"source":"{windowPeriod: 2444}"},"properties":[{"type":"Property","location":{"start":{"line":2,"column":6},"end":{"line":2,"column":24},"source":"windowPeriod: 2444"},"key":{"type":"Identifier","location":{"start":{"line":2,"column":6},"end":{"line":2,"column":18},"source":"windowPeriod"},"name":"windowPeriod"},"value":{"type":"IntegerLiteral","location":{"start":{"line":2,"column":20},"end":{"line":2,"column":24},"source":"2444"},"value":"2444"}}]}},{"type":"ExpressionStatement","location":{"start":{"line":3,"column":1},"end":{"line":5,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"expression":{"type":"PipeExpression","location":{"start":{"line":3,"column":1},"end":{"line":5,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"argument":{"type":"PipeExpression","location":{"start":{"line":3,"column":1},"end":{"line":4,"column":39},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: now())"},"argument":{"type":"CallExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":8},"end":{"line":3,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":13},"end":{"line":3,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":3,"column":13},"end":{"line":3,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":3,"column":13},"end":{"line":3,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":3,"column":18},"end":{"line":3,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":4,"column":8},"end":{"line":4,"column":39},"source":"range(start: -12h, stop: now())"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":8},"end":{"line":4,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":38},"source":"start: -12h, stop: now()"},"properties":[{"type":"Property","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":25},"source":"start: -12h"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":19},"source":"start"},"name":"start"},"value":{"type":"UnaryExpression","location":{"start":{"line":4,"column":21},"end":{"line":4,"column":25},"source":"-12h"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":4,"column":22},"end":{"line":4,"column":25},"source":"12h"},"values":[{"magnitude":12,"unit":"h"}]}}},{"type":"Property","location":{"start":{"line":4,"column":27},"end":{"line":4,"column":38},"source":"stop: now()"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":27},"end":{"line":4,"column":31},"source":"stop"},"name":"stop"},"value":{"type":"CallExpression","location":{"start":{"line":4,"column":33},"end":{"line":4,"column":38},"source":"now()"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":33},"end":{"line":4,"column":36},"source":"now"},"name":"now"}}}]}]}},"call":{"location":{"start":{"line":5,"column":8},"end":{"line":5,"column":40},"source":"yield(name: \\"${v.windowPeriod}\\")"},"callee":{"type":"Identifier","location":{"start":{"line":5,"column":8},"end":{"line":5,"column":13},"source":"yield"},"name":"yield"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"properties":[{"type":"Property","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"key":{"type":"Identifier","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":18},"source":"name"},"name":"name"},"value":{"type":"StringExpression","location":{"start":{"line":5,"column":20},"end":{"line":5,"column":39},"source":"\\"${v.windowPeriod}\\""},"parts":[{"type":"InterpolatedPart","location":{"start":{"line":5,"column":21},"end":{"line":5,"column":38},"source":"${v.windowPeriod}"},"expression":{"type":"MemberExpression","location":{"start":{"line":5,"column":23},"end":{"line":5,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":5,"column":23},"end":{"line":5,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":5,"column":25},"end":{"line":5,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}}]}]}}}]}'
      )

      runTest(ast, false, 2444)
    })
  })

  describe('Can handle aliasing:', () => {
    describe('of the timeRange property', () => {
      /*
          import "influxdata/influxdb/sample"
          splitPoint = -1m
          sample.data(set: "airSensor")
              |> range(start: -12h, stop: splitPoint)
              |> yield(name: "${v.windowPeriod}")
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":5,"column":40},"source":"import \\"influxdata/influxdb/sample\\"\\nsplitPoint = -1m\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: splitPoint)\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"VariableAssignment","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":17},"source":"splitPoint = -1m"},"id":{"location":{"start":{"line":2,"column":1},"end":{"line":2,"column":11},"source":"splitPoint"},"name":"splitPoint"},"init":{"type":"UnaryExpression","location":{"start":{"line":2,"column":14},"end":{"line":2,"column":17},"source":"-1m"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":2,"column":15},"end":{"line":2,"column":17},"source":"1m"},"values":[{"magnitude":1,"unit":"m"}]}}},{"type":"ExpressionStatement","location":{"start":{"line":3,"column":1},"end":{"line":5,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: splitPoint)\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"expression":{"type":"PipeExpression","location":{"start":{"line":3,"column":1},"end":{"line":5,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: splitPoint)\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"argument":{"type":"PipeExpression","location":{"start":{"line":3,"column":1},"end":{"line":4,"column":44},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: splitPoint)"},"argument":{"type":"CallExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":8},"end":{"line":3,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":13},"end":{"line":3,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":3,"column":13},"end":{"line":3,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":3,"column":13},"end":{"line":3,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":3,"column":18},"end":{"line":3,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":4,"column":8},"end":{"line":4,"column":44},"source":"range(start: -12h, stop: splitPoint)"},"callee":{"type":"Identifier","location":{"start":{"line":4,"column":8},"end":{"line":4,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":43},"source":"start: -12h, stop: splitPoint"},"properties":[{"type":"Property","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":25},"source":"start: -12h"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":14},"end":{"line":4,"column":19},"source":"start"},"name":"start"},"value":{"type":"UnaryExpression","location":{"start":{"line":4,"column":21},"end":{"line":4,"column":25},"source":"-12h"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":4,"column":22},"end":{"line":4,"column":25},"source":"12h"},"values":[{"magnitude":12,"unit":"h"}]}}},{"type":"Property","location":{"start":{"line":4,"column":27},"end":{"line":4,"column":43},"source":"stop: splitPoint"},"key":{"type":"Identifier","location":{"start":{"line":4,"column":27},"end":{"line":4,"column":31},"source":"stop"},"name":"stop"},"value":{"type":"Identifier","location":{"start":{"line":4,"column":33},"end":{"line":4,"column":43},"source":"splitPoint"},"name":"splitPoint"}}]}]}},"call":{"location":{"start":{"line":5,"column":8},"end":{"line":5,"column":40},"source":"yield(name: \\"${v.windowPeriod}\\")"},"callee":{"type":"Identifier","location":{"start":{"line":5,"column":8},"end":{"line":5,"column":13},"source":"yield"},"name":"yield"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"properties":[{"type":"Property","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"key":{"type":"Identifier","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":18},"source":"name"},"name":"name"},"value":{"type":"StringExpression","location":{"start":{"line":5,"column":20},"end":{"line":5,"column":39},"source":"\\"${v.windowPeriod}\\""},"parts":[{"type":"InterpolatedPart","location":{"start":{"line":5,"column":21},"end":{"line":5,"column":38},"source":"${v.windowPeriod}"},"expression":{"type":"MemberExpression","location":{"start":{"line":5,"column":23},"end":{"line":5,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":5,"column":23},"end":{"line":5,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":5,"column":25},"end":{"line":5,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}}]}]}}}]}'
      )

      runTest(ast, true, 119833)
    })
    describe('of the timeRange variable', () => {
      /*
          import "influxdata/influxdb/sample"
          splitPoint = -1m
          v = {timeRangeStop: splitPoint}
          sample.data(set: "airSensor")
              |> range(start: -12h, stop: v.timeRangeStop)
              |> yield(name: "${v.windowPeriod}")
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":6,"column":40},"source":"import \\"influxdata/influxdb/sample\\"\\nsplitPoint = -1m\\nv = {timeRangeStop: splitPoint}\\nsample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: v.timeRangeStop)\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"VariableAssignment","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":17},"source":"splitPoint = -1m"},"id":{"location":{"start":{"line":2,"column":1},"end":{"line":2,"column":11},"source":"splitPoint"},"name":"splitPoint"},"init":{"type":"UnaryExpression","location":{"start":{"line":2,"column":14},"end":{"line":2,"column":17},"source":"-1m"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":2,"column":15},"end":{"line":2,"column":17},"source":"1m"},"values":[{"magnitude":1,"unit":"m"}]}}},{"type":"VariableAssignment","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":32},"source":"v = {timeRangeStop: splitPoint}"},"id":{"location":{"start":{"line":3,"column":1},"end":{"line":3,"column":2},"source":"v"},"name":"v"},"init":{"type":"ObjectExpression","location":{"start":{"line":3,"column":5},"end":{"line":3,"column":32},"source":"{timeRangeStop: splitPoint}"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":6},"end":{"line":3,"column":31},"source":"timeRangeStop: splitPoint"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":6},"end":{"line":3,"column":19},"source":"timeRangeStop"},"name":"timeRangeStop"},"value":{"type":"Identifier","location":{"start":{"line":3,"column":21},"end":{"line":3,"column":31},"source":"splitPoint"},"name":"splitPoint"}}]}},{"type":"ExpressionStatement","location":{"start":{"line":4,"column":1},"end":{"line":6,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: v.timeRangeStop)\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"expression":{"type":"PipeExpression","location":{"start":{"line":4,"column":1},"end":{"line":6,"column":40},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: v.timeRangeStop)\\n    |> yield(name: \\"${v.windowPeriod}\\")"},"argument":{"type":"PipeExpression","location":{"start":{"line":4,"column":1},"end":{"line":5,"column":49},"source":"sample.data(set: \\"airSensor\\")\\n    |> range(start: -12h, stop: v.timeRangeStop)"},"argument":{"type":"CallExpression","location":{"start":{"line":4,"column":1},"end":{"line":4,"column":30},"source":"sample.data(set: \\"airSensor\\")"},"callee":{"type":"MemberExpression","location":{"start":{"line":4,"column":1},"end":{"line":4,"column":12},"source":"sample.data"},"object":{"type":"Identifier","location":{"start":{"line":4,"column":1},"end":{"line":4,"column":7},"source":"sample"},"name":"sample"},"property":{"type":"Identifier","location":{"start":{"line":4,"column":8},"end":{"line":4,"column":12},"source":"data"},"name":"data"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":4,"column":13},"end":{"line":4,"column":29},"source":"set: \\"airSensor\\""},"properties":[{"type":"Property","location":{"start":{"line":4,"column":13},"end":{"line":4,"column":29},"source":"set: \\"airSensor\\""},"key":{"type":"Identifier","location":{"start":{"line":4,"column":13},"end":{"line":4,"column":16},"source":"set"},"name":"set"},"value":{"type":"StringLiteral","location":{"start":{"line":4,"column":18},"end":{"line":4,"column":29},"source":"\\"airSensor\\""},"value":"airSensor"}}]}]},"call":{"location":{"start":{"line":5,"column":8},"end":{"line":5,"column":49},"source":"range(start: -12h, stop: v.timeRangeStop)"},"callee":{"type":"Identifier","location":{"start":{"line":5,"column":8},"end":{"line":5,"column":13},"source":"range"},"name":"range"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":48},"source":"start: -12h, stop: v.timeRangeStop"},"properties":[{"type":"Property","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":25},"source":"start: -12h"},"key":{"type":"Identifier","location":{"start":{"line":5,"column":14},"end":{"line":5,"column":19},"source":"start"},"name":"start"},"value":{"type":"UnaryExpression","location":{"start":{"line":5,"column":21},"end":{"line":5,"column":25},"source":"-12h"},"operator":"-","argument":{"type":"DurationLiteral","location":{"start":{"line":5,"column":22},"end":{"line":5,"column":25},"source":"12h"},"values":[{"magnitude":12,"unit":"h"}]}}},{"type":"Property","location":{"start":{"line":5,"column":27},"end":{"line":5,"column":48},"source":"stop: v.timeRangeStop"},"key":{"type":"Identifier","location":{"start":{"line":5,"column":27},"end":{"line":5,"column":31},"source":"stop"},"name":"stop"},"value":{"type":"MemberExpression","location":{"start":{"line":5,"column":33},"end":{"line":5,"column":48},"source":"v.timeRangeStop"},"object":{"type":"Identifier","location":{"start":{"line":5,"column":33},"end":{"line":5,"column":34},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":5,"column":35},"end":{"line":5,"column":48},"source":"timeRangeStop"},"name":"timeRangeStop"}}}]}]}},"call":{"location":{"start":{"line":6,"column":8},"end":{"line":6,"column":40},"source":"yield(name: \\"${v.windowPeriod}\\")"},"callee":{"type":"Identifier","location":{"start":{"line":6,"column":8},"end":{"line":6,"column":13},"source":"yield"},"name":"yield"},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":6,"column":14},"end":{"line":6,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"properties":[{"type":"Property","location":{"start":{"line":6,"column":14},"end":{"line":6,"column":39},"source":"name: \\"${v.windowPeriod}\\""},"key":{"type":"Identifier","location":{"start":{"line":6,"column":14},"end":{"line":6,"column":18},"source":"name"},"name":"name"},"value":{"type":"StringExpression","location":{"start":{"line":6,"column":20},"end":{"line":6,"column":39},"source":"\\"${v.windowPeriod}\\""},"parts":[{"type":"InterpolatedPart","location":{"start":{"line":6,"column":21},"end":{"line":6,"column":38},"source":"${v.windowPeriod}"},"expression":{"type":"MemberExpression","location":{"start":{"line":6,"column":23},"end":{"line":6,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":6,"column":23},"end":{"line":6,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":6,"column":25},"end":{"line":6,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}}]}]}}}]}'
      )

      runTest(ast, true, 119833)
    })
    describe('of the windowPeriod variable', () => {
      /*
          import "array"
          import "influxdata/influxdb/sample"
          split = 2444
          chunk = split
          v = {windowPeriod: chunk}
          array.from(rows: [{x: v.windowPeriod}])
          */
      const ast = JSON.parse(
        '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":6,"column":40},"source":"import \\"array\\"\\nimport \\"influxdata/influxdb/sample\\"\\nsplit = 2444\\nchunk = split\\nv = {windowPeriod: chunk}\\narray.from(rows: [{x: v.windowPeriod}])"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":15},"source":"import \\"array\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":15},"source":"\\"array\\""},"value":"array"}},{"type":"ImportDeclaration","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":36},"source":"import \\"influxdata/influxdb/sample\\""},"as":null,"path":{"location":{"start":{"line":2,"column":8},"end":{"line":2,"column":36},"source":"\\"influxdata/influxdb/sample\\""},"value":"influxdata/influxdb/sample"}}],"body":[{"type":"VariableAssignment","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":13},"source":"split = 2444"},"id":{"location":{"start":{"line":3,"column":1},"end":{"line":3,"column":6},"source":"split"},"name":"split"},"init":{"type":"IntegerLiteral","location":{"start":{"line":3,"column":9},"end":{"line":3,"column":13},"source":"2444"},"value":"2444"}},{"type":"VariableAssignment","location":{"start":{"line":4,"column":1},"end":{"line":4,"column":14},"source":"chunk = split"},"id":{"location":{"start":{"line":4,"column":1},"end":{"line":4,"column":6},"source":"chunk"},"name":"chunk"},"init":{"type":"Identifier","location":{"start":{"line":4,"column":9},"end":{"line":4,"column":14},"source":"split"},"name":"split"}},{"type":"VariableAssignment","location":{"start":{"line":5,"column":1},"end":{"line":5,"column":26},"source":"v = {windowPeriod: chunk}"},"id":{"location":{"start":{"line":5,"column":1},"end":{"line":5,"column":2},"source":"v"},"name":"v"},"init":{"type":"ObjectExpression","location":{"start":{"line":5,"column":5},"end":{"line":5,"column":26},"source":"{windowPeriod: chunk}"},"properties":[{"type":"Property","location":{"start":{"line":5,"column":6},"end":{"line":5,"column":25},"source":"windowPeriod: chunk"},"key":{"type":"Identifier","location":{"start":{"line":5,"column":6},"end":{"line":5,"column":18},"source":"windowPeriod"},"name":"windowPeriod"},"value":{"type":"Identifier","location":{"start":{"line":5,"column":20},"end":{"line":5,"column":25},"source":"chunk"},"name":"chunk"}}]}},{"type":"ExpressionStatement","location":{"start":{"line":6,"column":1},"end":{"line":6,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"expression":{"type":"CallExpression","location":{"start":{"line":6,"column":1},"end":{"line":6,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"callee":{"type":"MemberExpression","location":{"start":{"line":6,"column":1},"end":{"line":6,"column":11},"source":"array.from"},"object":{"type":"Identifier","location":{"start":{"line":6,"column":1},"end":{"line":6,"column":6},"source":"array"},"name":"array"},"property":{"type":"Identifier","location":{"start":{"line":6,"column":7},"end":{"line":6,"column":11},"source":"from"},"name":"from"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":6,"column":12},"end":{"line":6,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"properties":[{"type":"Property","location":{"start":{"line":6,"column":12},"end":{"line":6,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"key":{"type":"Identifier","location":{"start":{"line":6,"column":12},"end":{"line":6,"column":16},"source":"rows"},"name":"rows"},"value":{"type":"ArrayExpression","location":{"start":{"line":6,"column":18},"end":{"line":6,"column":39},"source":"[{x: v.windowPeriod}]"},"elements":[{"type":"ObjectExpression","location":{"start":{"line":6,"column":19},"end":{"line":6,"column":38},"source":"{x: v.windowPeriod}"},"properties":[{"type":"Property","location":{"start":{"line":6,"column":20},"end":{"line":6,"column":37},"source":"x: v.windowPeriod"},"key":{"type":"Identifier","location":{"start":{"line":6,"column":20},"end":{"line":6,"column":21},"source":"x"},"name":"x"},"value":{"type":"MemberExpression","location":{"start":{"line":6,"column":23},"end":{"line":6,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":6,"column":23},"end":{"line":6,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":6,"column":25},"end":{"line":6,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}]}}]}]}}]}'
      )

      runTest(ast, false, 2444)
    })
  })

  // TODO: https://github.com/influxdata/ui/issues/4695
  describe.skip('Can handle complex inner expressions:', () => {
    describe('for windowPeriod:', () => {
      describe('as an inline expression', () => {
        /*
            import "array"
            v = {windowPeriod: 2 * 3 * 4 * 5}
            array.from(rows: [{x: v.windowPeriod}])
            */
        const ast = JSON.parse(
          '{"type":"File","location":{"start":{"line":1,"column":1},"end":{"line":3,"column":40},"source":"import \\"array\\"\\nv = {windowPeriod: 2 * 3 * 4 * 5}\\narray.from(rows: [{x: v.windowPeriod}])"},"metadata":"parser-type=rust","package":null,"imports":[{"type":"ImportDeclaration","location":{"start":{"line":1,"column":1},"end":{"line":1,"column":15},"source":"import \\"array\\""},"as":null,"path":{"location":{"start":{"line":1,"column":8},"end":{"line":1,"column":15},"source":"\\"array\\""},"value":"array"}}],"body":[{"type":"VariableAssignment","location":{"start":{"line":2,"column":1},"end":{"line":2,"column":34},"source":"v = {windowPeriod: 2 * 3 * 4 * 5}"},"id":{"location":{"start":{"line":2,"column":1},"end":{"line":2,"column":2},"source":"v"},"name":"v"},"init":{"type":"ObjectExpression","location":{"start":{"line":2,"column":5},"end":{"line":2,"column":34},"source":"{windowPeriod: 2 * 3 * 4 * 5}"},"properties":[{"type":"Property","location":{"start":{"line":2,"column":6},"end":{"line":2,"column":33},"source":"windowPeriod: 2 * 3 * 4 * 5"},"key":{"type":"Identifier","location":{"start":{"line":2,"column":6},"end":{"line":2,"column":18},"source":"windowPeriod"},"name":"windowPeriod"},"value":{"type":"BinaryExpression","location":{"start":{"line":2,"column":20},"end":{"line":2,"column":33},"source":"2 * 3 * 4 * 5"},"operator":"*","left":{"type":"BinaryExpression","location":{"start":{"line":2,"column":20},"end":{"line":2,"column":29},"source":"2 * 3 * 4"},"operator":"*","left":{"type":"BinaryExpression","location":{"start":{"line":2,"column":20},"end":{"line":2,"column":25},"source":"2 * 3"},"operator":"*","left":{"type":"IntegerLiteral","location":{"start":{"line":2,"column":20},"end":{"line":2,"column":21},"source":"2"},"value":"2"},"right":{"type":"IntegerLiteral","location":{"start":{"line":2,"column":24},"end":{"line":2,"column":25},"source":"3"},"value":"3"}},"right":{"type":"IntegerLiteral","location":{"start":{"line":2,"column":28},"end":{"line":2,"column":29},"source":"4"},"value":"4"}},"right":{"type":"IntegerLiteral","location":{"start":{"line":2,"column":32},"end":{"line":2,"column":33},"source":"5"},"value":"5"}}}]}},{"type":"ExpressionStatement","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"expression":{"type":"CallExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":40},"source":"array.from(rows: [{x: v.windowPeriod}])"},"callee":{"type":"MemberExpression","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":11},"source":"array.from"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":1},"end":{"line":3,"column":6},"source":"array"},"name":"array"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":7},"end":{"line":3,"column":11},"source":"from"},"name":"from"}},"arguments":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":39},"source":"rows: [{x: v.windowPeriod}]"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":12},"end":{"line":3,"column":16},"source":"rows"},"name":"rows"},"value":{"type":"ArrayExpression","location":{"start":{"line":3,"column":18},"end":{"line":3,"column":39},"source":"[{x: v.windowPeriod}]"},"elements":[{"type":"ObjectExpression","location":{"start":{"line":3,"column":19},"end":{"line":3,"column":38},"source":"{x: v.windowPeriod}"},"properties":[{"type":"Property","location":{"start":{"line":3,"column":20},"end":{"line":3,"column":37},"source":"x: v.windowPeriod"},"key":{"type":"Identifier","location":{"start":{"line":3,"column":20},"end":{"line":3,"column":21},"source":"x"},"name":"x"},"value":{"type":"MemberExpression","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":37},"source":"v.windowPeriod"},"object":{"type":"Identifier","location":{"start":{"line":3,"column":23},"end":{"line":3,"column":24},"source":"v"},"name":"v"},"property":{"type":"Identifier","location":{"start":{"line":3,"column":25},"end":{"line":3,"column":37},"source":"windowPeriod"},"name":"windowPeriod"}}}]}]}}]}]}}]}'
        )

        runTest(ast, false, 2 * 3 * 4 * 5)
      })
    })

    describe('for timeRange:', () => {
      describe('as an inline expression', () => {
        /*
              import "influxdata/influxdb/sample"
              import "date"
              import "experimental"
              sample.data(set: "airSensor")
                  |> range(start: -12h, stop: "-${2 * 3 * 4 * 5}m")
                  |> yield(name: "${v.windowPeriod}")
              */
        const ast = {}

        runTest(ast, true, 7180)
      })
      describe('use v.timeRangeStart as pre-bound Identifier, to an innerExpr', () => {
        /*
              import "influxdata/influxdb/sample"
              import "date"
              import "experimental"
              truncated = date.truncate(t:v.timeRangeStop,unit:1m)
              splitPoint = experimental.subDuration(d: 10m, from: truncated)
              sample.data(set: "airSensor")
                  |> range(start: -12h, stop: splitPoint)
                  |> yield(name: "${v.windowPeriod}")
              */
        const ast = {}

        runTest(ast, true, 'TODO')
      })
    })
  })
})
